// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaTecnicaBackend.API.Data;

#nullable disable

namespace PruebaTecnicaBackend.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240915232827_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PruebaTecnicaBackend.API.Data.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6e285376-1d92-4d4f-91ee-ca3ba8dc6500"),
                            CreatedDateTime = new DateTime(2024, 9, 15, 23, 28, 27, 90, DateTimeKind.Utc).AddTicks(7782),
                            Email = "admin@gmail.com",
                            LastModifiedDateTime = new DateTime(2024, 9, 15, 23, 28, 27, 90, DateTimeKind.Utc).AddTicks(7789),
                            Name = "Admin",
                            Password = "$2a$11$CS1BiiO5QyVsUNYHxbgk1./1MMknZpq2Bi7lPE2wKmlpb1rnUTmie",
                            RoleId = new Guid("7d82d5ad-4e10-48bc-81ad-98c3200be749")
                        });
                });

            modelBuilder.Entity("PruebaTecnicaBackend.API.Data.Entities.UserRoleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("47363117-ff0f-43f1-b600-9886fafde0f7"),
                            CreatedDateTime = new DateTime(2024, 9, 15, 23, 28, 26, 972, DateTimeKind.Utc).AddTicks(3697),
                            Name = "Sin rol"
                        },
                        new
                        {
                            Id = new Guid("7bd46732-4acc-4fb9-b1ca-c4db971b11e0"),
                            CreatedDateTime = new DateTime(2024, 9, 15, 23, 28, 26, 972, DateTimeKind.Utc).AddTicks(3700),
                            Name = "Supervisor"
                        },
                        new
                        {
                            Id = new Guid("aad3b2fb-c5ce-45cf-a52a-7d3f8a4addef"),
                            CreatedDateTime = new DateTime(2024, 9, 15, 23, 28, 26, 972, DateTimeKind.Utc).AddTicks(3702),
                            Name = "Empleado"
                        },
                        new
                        {
                            Id = new Guid("7d82d5ad-4e10-48bc-81ad-98c3200be749"),
                            CreatedDateTime = new DateTime(2024, 9, 15, 23, 28, 26, 972, DateTimeKind.Utc).AddTicks(3703),
                            Name = "Administrador"
                        });
                });

            modelBuilder.Entity("PruebaTecnicaBackend.API.Data.Entities.UserTaskEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignedTo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssignedTo");

                    b.ToTable("UserTasks");
                });

            modelBuilder.Entity("PruebaTecnicaBackend.API.Data.Entities.UserEntity", b =>
                {
                    b.HasOne("PruebaTecnicaBackend.API.Data.Entities.UserRoleEntity", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PruebaTecnicaBackend.API.Data.Entities.UserTaskEntity", b =>
                {
                    b.HasOne("PruebaTecnicaBackend.API.Data.Entities.UserEntity", "User")
                        .WithMany("AssignedTasks")
                        .HasForeignKey("AssignedTo")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("User");
                });

            modelBuilder.Entity("PruebaTecnicaBackend.API.Data.Entities.UserEntity", b =>
                {
                    b.Navigation("AssignedTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
